{"ast":null,"code":"var _jsxFileName = \"D:\\\\react code\\\\Authentication using React\\\\01-starting-project\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLoading, setisLoading] = useState(false);\n  const emailIdRef = useRef();\n  const passwordRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitButtonHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailIdRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n    setisLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCw436B57QFRRB-tv1gbHWXcmkPgKOnqTM';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCw436B57QFRRB-tv1gbHWXcmkPgKOnqTM';\n    }\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setisLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          const errorMessage = \"Signup Failed\"; // if(data && data.error && data.error.message){\n          //   errorMessage=data.error.message\n          // }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      console.log(data);\n    }).catch(err => {\n      alert(err.mesage);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitButtonHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailIdRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\\"Loading\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"ChM5fHmxnCYRhiyp398DOjFXaIg=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["D:/react code/Authentication using React/01-starting-project/src/components/Auth/AuthForm.js"],"names":["useRef","useState","classes","AuthForm","isLoading","setisLoading","emailIdRef","passwordRef","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitButtonHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","console","log","catch","err","alert","mesage","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const [isLoading,setisLoading]=useState(false);\n  const emailIdRef=useRef();\n  const passwordRef=useRef();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n  const submitButtonHandler=(event)=>{\n    event.preventDefault();\n    const enteredEmail=emailIdRef.current.value;\n    const enteredPassword=passwordRef.current.value;\n    setisLoading(true);\n    let url;\n    if(isLogin){\n      url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCw436B57QFRRB-tv1gbHWXcmkPgKOnqTM'\n    }\n    else{\n     url='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCw436B57QFRRB-tv1gbHWXcmkPgKOnqTM'\n     }\n      fetch(url,\n        {\n          method:'POST',\n          body :JSON.stringify({\n            email:enteredEmail,\n            password:enteredPassword,\n            returnSecureToken:true\n          }),\n           headers:{\n             'Content-Type':'application/json'\n           }\n        }).then((res)=>{\n          setisLoading(false)\n          if(res.ok){\n              return res.json()\n          }\n          else{\n            return res.json().then(data=>{\n              const errorMessage=\"Signup Failed\";\n              // if(data && data.error && data.error.message){\n              //   errorMessage=data.error.message\n              // }\n              throw new Error(errorMessage);\n            })\n          }\n        }).then(data=>{\n          console.log(data)\n        }).catch((err)=>{\n          alert(err.mesage)\n        })\n    \n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitButtonHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailIdRef}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordRef}/>\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading &&<p>\"Loading\"</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}