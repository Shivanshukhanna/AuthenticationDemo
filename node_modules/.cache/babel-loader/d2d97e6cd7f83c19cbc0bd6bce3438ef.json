{"ast":null,"code":"var _jsxFileName = \"D:\\\\react code\\\\Authentication using React\\\\01-starting-project\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLoading, setisLoading] = useState(false);\n  const emailIdRef = useRef();\n  const passwordRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  async function submitButtonHandler(event) {\n    event.preventDefault();\n    const enteredEmail = emailIdRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n    setisLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCw436B57QFRRB-tv1gbHWXcmkPgKOnqTM';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCw436B57QFRRB-tv1gbHWXcmkPgKOnqTM';\n    }\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setisLoading(false);\n      const data = await response.json();\n\n      if (response.ok) {\n        console.log(data);\n      } else {\n        const errorMessage = \"Signup Failed\"; // if(data && data.error && data.error.message){\n        //   errorMessage=data.error.message\n        // }\n\n        alert(data.error.message);\n      } //   .then((res) => {\n      //   setisLoading(false)\n      //   if (res.ok) {\n      //     return res.json()\n      //   }\n      //   else {\n      //     return res.json().then(data => {\n      //       const errorMessage = \"Signup Failed\";\n      //       // if(data && data.error && data.error.message){\n      //       //   errorMessage=data.error.message\n      //       // }\n      //       throw new Error(errorMessage);\n      //     })\n      //   }\n      // }).then(data => {\n      //   console.log(data)\n      // })\n\n    } catch (error) {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitButtonHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailIdRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 24\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\\"Loading\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AuthForm, \"znhThB8yU1DBbBc0olIPnd1vWbo=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["D:/react code/Authentication using React/01-starting-project/src/components/Auth/AuthForm.js"],"names":["useRef","useState","classes","AuthForm","isLoading","setisLoading","emailIdRef","passwordRef","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitButtonHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","response","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","data","json","ok","console","log","errorMessage","alert","error","message","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const [isLoading, setisLoading] = useState(false);\n  const emailIdRef = useRef();\n  const passwordRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n  async function submitButtonHandler (event) {\n    event.preventDefault();\n    const enteredEmail = emailIdRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n    setisLoading(true);\n    let url;\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCw436B57QFRRB-tv1gbHWXcmkPgKOnqTM'\n    }\n    else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCw436B57QFRRB-tv1gbHWXcmkPgKOnqTM'\n    }\n    try {\n      const response = await fetch(url,\n        {\n          method: 'POST',\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n      setisLoading(false)        \n      const data=await response.json();\n      if (response.ok) {\n        \n        console.log(data)\n      }\n      else {\n\n        const errorMessage = \"Signup Failed\";\n          // if(data && data.error && data.error.message){\n          //   errorMessage=data.error.message\n          // }\n          alert(data.error.message)\n\n        \n      }\n        \n      //   .then((res) => {\n      //   setisLoading(false)\n      //   if (res.ok) {\n      //     return res.json()\n      //   }\n      //   else {\n      //     return res.json().then(data => {\n      //       const errorMessage = \"Signup Failed\";\n      //       // if(data && data.error && data.error.message){\n      //       //   errorMessage=data.error.message\n      //       // }\n      //       throw new Error(errorMessage);\n      //     })\n      //   }\n      // }).then(data => {\n      //   console.log(data)\n      // })\n    }catch (error) {\n        \n      }\n    \n  }\n\nreturn (\n  <section className={classes.auth}>\n    <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n    <form onSubmit={submitButtonHandler}>\n      <div className={classes.control}>\n        <label htmlFor='email'>Your Email</label>\n        <input type='email' id='email' required ref={emailIdRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='password'>Your Password</label>\n        <input type='password' id='password' required ref={passwordRef} />\n      </div>\n      <div className={classes.actions}>\n        {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n        {isLoading && <p>\"Loading\"</p>}\n        <button\n          type='button'\n          className={classes.toggle}\n          onClick={switchAuthModeHandler}\n        >\n          {isLogin ? 'Create new account' : 'Login with existing account'}\n        </button>\n      </div>\n    </form>\n  </section>\n);\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}